{{ if and (eq .osid "linux-ubuntu") .personal -}}
{{ template "bash.top" . }}

# Check if 'op' command is not available
if ! command -v op &> /dev/null; then
    ARCH="amd64"
    OP_VERSION="v$(curl https://app-updates.agilebits.com/check/1/0/CLI2/en/2.0.0/N -s | grep -Eo '[0-9]+\.[0-9]+\.[0.9]+')"

    # Check if 'unzip' is not available
    if ! command -v unzip &> /dev/null; then
        echo "Error: 'unzip' command not found. Please install 'unzip' before proceeding."
        exit 1
    fi

    # Use the system's temporary directory for unzipping
    TMP_DIR="/tmp/1password_install"

    # Create the temporary directory if it doesn't exist
    mkdir -p "$TMP_DIR"

    # Download and unzip 1Password CLI in the temporary directory
    curl -sSfo "$TMP_DIR/op.zip" \
        https://cache.agilebits.com/dist/1P/op2/pkg/"$OP_VERSION"/op_linux_"$ARCH"_"$OP_VERSION".zip
    unzip -oq -d "$TMP_DIR" "$TMP_DIR/op.zip"
    rm "$TMP_DIR/op.zip"

    # Check if the unzip was successful
    if [ $? -eq 0 ]; then
        echo "1Password CLI files unzipped to $TMP_DIR."

        # Move the files to the system-wide location with sudo
        sudo mv "$TMP_DIR/op" /usr/local/bin/
        sudo mv "$TMP_DIR/op.sig" /usr/local/bin/

        # Check if the move was successful
        if [ $? -eq 0 ]; then
            echo "1Password CLI installed to /usr/local/bin."
        else
            echo "Failed to move 1Password CLI to /usr/local/bin."
            exit 1
        fi
    else
        echo "Failed to unzip 1Password CLI."
        exit 1
    fi

    # Clean up the temporary directory
    rm -rf "$TMP_DIR"
else
    echo "1Password CLI is already installed."
fi

# Check if 'op.exe' command is available
if ! command -v op.exe &> /dev/null; then
  print_error "1Password CLI is not installed. Please install it first."
  exit 1
else
  print_success "Authentiating with 1Password CLI..."
  eval $(op.exe signin)
fi

{{ end -}}
